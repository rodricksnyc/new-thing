import "core-js/modules/es.string.small.js";
import "core-js/modules/es.object.define-property.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.object.get-own-property-descriptor.js";
import "core-js/modules/es.array.for-each.js";
import "core-js/modules/web.dom-collections.for-each.js";
import "core-js/modules/es.object.get-own-property-descriptors.js";
import "core-js/modules/es.object.define-properties.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import styled from 'styled-components';
import isNumber from 'lodash/isNumber';
import { RangeSlider as RangeSliderComponent } from '@looker/components';
export var RangeSlider = function RangeSlider(_ref) {
  var value = _ref.value,
      options = _ref.options,
      onChange = _ref.onChange;

  var bounds = _objectSpread({
    min: 0,
    max: 100
  }, options || {});

  var handleOnChange = function handleOnChange(v) {
    onChange({
      min: v[0],
      max: v[1]
    });
  };

  return React.createElement(RangeSliderWrapper, null, React.createElement(RangeSliderComponent, {
    max: bounds.max,
    min: bounds.min,
    value: [isNumber(value.min) ? value.min : bounds.min, isNumber(value.max) ? value.max : bounds.max],
    onChange: handleOnChange
  }));
};
var RangeSliderWrapper = styled.div.withConfig({
  displayName: "RangeSlider__RangeSliderWrapper",
  componentId: "sc-9im42e-0"
})(["font-size:", ";min-width:150px;padding:0 ", ";width:100%;"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.fontSizes.small;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.space.small;
});
//# sourceMappingURL=RangeSlider.js.map