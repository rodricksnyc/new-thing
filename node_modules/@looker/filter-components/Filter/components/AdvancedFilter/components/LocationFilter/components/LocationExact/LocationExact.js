function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import "core-js/modules/es.number.constructor.js";
import "core-js/modules/es.object.define-property.js";
import { Flex } from '@looker/components';
import React from 'react';
import styled from 'styled-components';
import { MAX_LATITUDE, MAX_LONGITUDE, MIN_LATITUDE, MIN_LONGITUDE } from '../../../../../../constants';
import { GroupInput } from '../../../GroupInput';
export var LocationExact = function LocationExact(_ref) {
  var item = _ref.item,
      onChange = _ref.onChange,
      _ref$latString = _ref.latString,
      latString = _ref$latString === void 0 ? 'LATITUDE' : _ref$latString,
      _ref$lonString = _ref.lonString,
      lonString = _ref$lonString === void 0 ? 'LONGITUDE' : _ref$lonString,
      _ref$lat = _ref.lat,
      lat = _ref$lat === void 0 ? 'lat' : _ref$lat,
      _ref$lon = _ref.lon,
      lon = _ref$lon === void 0 ? 'lon' : _ref$lon,
      _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? 'right' : _ref$placement;

  var latChange = function latChange(event) {
    if (Number(event.currentTarget.value) <= MAX_LATITUDE && Number(event.currentTarget.value) >= MIN_LATITUDE) {
      onChange(item.id, _defineProperty({}, lat, event.currentTarget.value));
    }
  };

  var lonChange = function lonChange(event) {
    if (Number(event.currentTarget.value) <= MAX_LONGITUDE && Number(event.currentTarget.value) >= MIN_LONGITUDE) {
      onChange(item.id, _defineProperty({}, lon, event.currentTarget.value));
    }
  };

  return React.createElement(Flex, {
    flexDirection: "row"
  }, React.createElement(GroupInput, {
    before: React.createElement(Prefix, null, latString),
    value: String(item.lat || ''),
    type: "number",
    onChange: latChange,
    placement: "middle",
    minWidth: "".concat(latString.length / 2 + 5.5, "em")
  }), React.createElement(GroupInput, {
    before: React.createElement(Prefix, null, lonString),
    value: String(item.lon || ''),
    type: "number",
    onChange: lonChange,
    placement: placement,
    minWidth: "".concat(lonString.length / 2 + 5.5, "em")
  }));
};
var Prefix = styled.span.withConfig({
  displayName: "LocationExact__Prefix",
  componentId: "sc-cjs9jc-0"
})(["color:", ";font-size:", ";white-space:nowrap;"], function (_ref2) {
  var colors = _ref2.theme.colors;
  return colors.text1;
}, function (_ref3) {
  var fontSizes = _ref3.theme.fontSizes;
  return fontSizes.xsmall;
});
//# sourceMappingURL=LocationExact.js.map