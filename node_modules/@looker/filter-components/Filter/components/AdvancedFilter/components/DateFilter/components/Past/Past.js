import "core-js/modules/es.array.map.js";
import "core-js/modules/es.regexp.exec.js";
import "core-js/modules/es.string.split.js";
import "core-js/modules/es.number.constructor.js";
import "core-js/modules/es.array.find.js";
import React, { useMemo } from 'react';
import { useFiscalPastUnits, usePastUnits } from '../../../../../../constants';
import { showFiscalUnits } from '../../../../utils/show_fiscal_units';
import { GroupSelect } from '../../../GroupSelect';
import { GroupInput } from '../../../GroupInput';
export var Past = function Past(_ref) {
  var item = _ref.item,
      onChange = _ref.onChange,
      field = _ref.field;
  var id = item.id,
      value = item.value,
      unit = item.unit,
      complete = item.complete;

  var valueChange = function valueChange(e) {
    var newValue = String(e.target.value).split(',').map(Number);
    onChange(id, {
      value: newValue
    });
  };

  var unitChange = function unitChange(value) {
    var option = options.find(function (option) {
      return option.value === value;
    });
    onChange(item.id, {
      unit: option === null || option === void 0 ? void 0 : option.unit,
      complete: option === null || option === void 0 ? void 0 : option.complete
    });
  };

  var selectedUnit = complete ? "c_".concat(unit) : "".concat(unit);
  var fiscalPastUnits = useFiscalPastUnits();
  var pastUnits = usePastUnits();
  var options = showFiscalUnits(field) ? fiscalPastUnits : pastUnits;
  var formattedOptions = useMemo(function () {
    return options.map(function (_ref2) {
      var label = _ref2.label,
          value = _ref2.value;
      return {
        label: label,
        value: value
      };
    });
  }, []);
  return React.createElement(React.Fragment, null, React.createElement(GroupInput, {
    onChange: valueChange,
    value: value,
    placement: "middle"
  }), React.createElement(GroupSelect, {
    value: selectedUnit,
    options: formattedOptions,
    onChange: unitChange,
    placement: "right"
  }));
};
//# sourceMappingURL=Past.js.map