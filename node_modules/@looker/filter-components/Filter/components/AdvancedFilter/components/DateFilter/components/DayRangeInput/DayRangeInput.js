import "core-js/modules/es.date.to-string.js";
import "core-js/modules/es.date.now.js";
import "core-js/modules/es.array.concat.js";
import { Box2, ChipButton, InputDateRange, Popover } from '@looker/components';
import React from 'react';
import { FILTERS_DATE_FORMAT, formatDate } from '../../utils/format_date';
export var DayRangeInput = function DayRangeInput(_ref) {
  var value = _ref.value,
      onChange = _ref.onChange;

  var handleChange = function handleChange() {
    var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var newFrom = d.from || new Date(Date.now());
    var newTo = d.to || new Date(Date.now());
    var newDateRange = {
      from: new Date(newFrom.getFullYear(), newFrom.getMonth(), newFrom.getDate()),
      to: new Date(newTo.getFullYear(), newTo.getMonth(), newTo.getDate())
    };
    onChange(newDateRange);
  };

  var formattedValue = "".concat(formatDate(value.from), " \u2013 ").concat(formatDate(value.to));
  return React.createElement(Popover, {
    content: React.createElement(Box2, {
      p: "u3"
    }, React.createElement(InputDateRange, {
      onChange: handleChange,
      value: value,
      dateStringFormat: FILTERS_DATE_FORMAT
    })),
    placement: "bottom-start"
  }, React.createElement(ChipButton, null, formattedValue));
};
//# sourceMappingURL=DayRangeInput.js.map