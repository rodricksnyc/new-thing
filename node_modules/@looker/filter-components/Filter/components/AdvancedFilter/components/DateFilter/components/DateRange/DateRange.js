import "core-js/modules/es.date.to-string.js";
import "core-js/modules/es.date.now.js";
import { Flex } from '@looker/components';
import { addDays, dateToFilterDateTimeModel, filterDateTimeModelToDate } from '@looker/filter-expressions';
import React from 'react';
import { MidInputLabel } from '../../../MidInputLabel';
import { DateInput } from '../DateInput';
import { TimeInput } from '../TimeInput';
export var DateRange = function DateRange(_ref) {
  var item = _ref.item,
      onChange = _ref.onChange,
      placement = _ref.placement,
      showTime = _ref.showTime;
  var id = item.id,
      start = item.start,
      end = item.end;
  var startDate = start ? filterDateTimeModelToDate(start) : new Date(Date.now());
  var endDate = end ? filterDateTimeModelToDate(end) : new Date(Date.now());

  var startChange = function startChange(newStart) {
    if (newStart > endDate) {
      var newEnd = addDays(newStart, 1);
      onChange(id, {
        start: dateToFilterDateTimeModel(newStart),
        end: dateToFilterDateTimeModel(newEnd)
      });
    } else {
      onChange(id, {
        start: dateToFilterDateTimeModel(newStart)
      });
    }
  };

  var endChange = function endChange(newEnd) {
    if (newEnd < startDate) {
      var newStart = addDays(newEnd, -1);
      onChange(id, {
        start: dateToFilterDateTimeModel(newStart),
        end: dateToFilterDateTimeModel(newEnd)
      });
    } else {
      onChange(id, {
        end: dateToFilterDateTimeModel(newEnd)
      });
    }
  };

  return React.createElement(Flex, null, React.createElement(DateInput, {
    date: startDate,
    onChange: startChange,
    placement: placement === 'right' ? 'middle' : 'left'
  }), showTime && React.createElement(TimeInput, {
    date: startDate,
    onChange: startChange,
    placement: "middle"
  }), React.createElement(MidInputLabel, null, "until (before)"), React.createElement(DateInput, {
    date: endDate,
    onChange: endChange,
    placement: showTime ? 'middle' : 'right'
  }), showTime && React.createElement(TimeInput, {
    date: endDate,
    onChange: endChange,
    placement: "right"
  }));
};
//# sourceMappingURL=DateRange.js.map