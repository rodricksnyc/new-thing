import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { InputText, Select } from '@looker/components';
import omit from 'lodash/omit';
import React from 'react';
import styled from 'styled-components';
import { inputPlacementStyle } from '../../../../utils/filter_styles';
export var GroupSelect = styled(function (props) {
  return React.createElement(Select, _extends({
    autoResize: true
  }, omit(props, 'placement'), {
    noErrorIcon: true
  }));
}).withConfig({
  displayName: "GroupSelect",
  componentId: "sc-jsg7oj-0"
})(["", "{", "}"], InputText, inputPlacementStyle);
//# sourceMappingURL=GroupSelect.js.map