import "core-js/modules/es.number.constructor.js";
import "core-js/modules/es.number.is-nan.js";
import "core-js/modules/es.array.is-array.js";
import React from 'react';
import { GroupInput } from '../../../GroupInput';
export var SingleNumberInput = function SingleNumberInput(_ref) {
  var _ref3;

  var item = _ref.item,
      onChange = _ref.onChange,
      placement = _ref.placement,
      validationMessage = _ref.validationMessage;

  var inputChange = function inputChange(_ref2) {
    var value = _ref2.currentTarget.value;
    var numberValue = Number(value);
    var newValueArr = value === '' ? [] : [numberValue];

    if (!Number.isNaN(numberValue)) {
      onChange === null || onChange === void 0 ? void 0 : onChange(item.id, {
        value: newValueArr
      });
    }
  };

  var inputValue = (_ref3 = Array.isArray(item.value) ? item.value[0] : item.value) !== null && _ref3 !== void 0 ? _ref3 : '';
  return React.createElement(GroupInput, {
    type: "number",
    value: inputValue,
    onChange: inputChange,
    placement: placement,
    minWidth: "4.5em",
    "data-testid": "single-number",
    validationType: validationMessage === null || validationMessage === void 0 ? void 0 : validationMessage.type,
    noErrorIcon: true
  });
};
//# sourceMappingURL=SingleNumberInput.js.map