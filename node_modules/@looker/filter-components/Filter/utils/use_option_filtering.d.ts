/// <reference types="react" />
import type { Option } from '../types/option';
export declare const useDebouncedFilterTerm: (onInputChange?: ((value: string) => void) | undefined) => {
    debouncedFilterTerm: string;
    noOptionsLabel: string;
    onFilter: import("react").Dispatch<import("react").SetStateAction<string>>;
};
export interface UseOptionFilteringProps {
    excludeValues?: boolean;
    limit?: number;
    onInputChange?: (value: string) => void;
    options: Option[];
    value: string | string[];
}
export declare const useOptionFiltering: ({ excludeValues, limit, onInputChange, options, value, }: UseOptionFilteringProps) => {
    noOptionsLabel: string;
    onFilter: import("react").Dispatch<import("react").SetStateAction<string>>;
    filteredOptions: Option[];
    debouncedFilterTerm: string;
};
