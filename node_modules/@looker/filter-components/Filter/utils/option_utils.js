import "core-js/modules/es.array.is-array.js";
import "core-js/modules/es.array.map.js";
import "core-js/modules/es.regexp.exec.js";
import "core-js/modules/es.string.replace.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.string.trim.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.array.includes.js";
import "core-js/modules/es.string.includes.js";
import { getComboboxText } from '@looker/components';

var createOption = function createOption(value) {
  return {
    value: value,
    label: value
  };
};

export var createOptions = function createOptions(values) {
  if (!values) return [];
  var valuesArray = !Array.isArray(values) ? [values] : values;
  return valuesArray.map(function (value) {
    return createOption(value);
  });
};
export var createEnumeration = function createEnumeration() {
  var isParameter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return function (e) {
    return {
      label: e.label,
      value: isParameter ? unescapeParameterValue(e.value) : String(e.value)
    };
  };
};

var unescapeParameterValue = function unescapeParameterValue(value) {
  return String(value).replace(/^\^([-])/, '$1').replace(/\^([_%,"'])/g, '$1');
};

export var filterOptions = function filterOptions(options, filterTerm, excludedValues) {
  if (!excludedValues && (!filterTerm || filterTerm === '')) return options;
  return options.filter(function (option) {
    return filterOption(option, filterTerm || '', excludedValues);
  });
};

var filterOption = function filterOption(option, filterTerm, excludedValues) {
  var matchesFilter = true;

  if (filterTerm !== '') {
    var filterText = filterTerm.trim().toLowerCase();
    var optionText = getComboboxText(option).trim().toLowerCase();
    matchesFilter = optionText.indexOf(filterText) > -1;
  }

  return excludedValues ? matchesFilter && !excludedValues.includes(option.value) : matchesFilter;
};
//# sourceMappingURL=option_utils.js.map