import "core-js/modules/es.array.concat.js";
import { css } from 'styled-components';
export var multiInputWidth = 280;
var flatBorderRight = css(["border-bottom-right-radius:0;border-top-right-radius:0;&:not(:focus-within){border-right-color:transparent;}"]);
var flatBorderLeft = css(["border-bottom-left-radius:0;border-top-left-radius:0;"]);
export var inputPlacementStyle = function inputPlacementStyle(_ref) {
  var placement = _ref.placement;

  switch (placement) {
    case 'left':
      return "\n      ".concat(flatBorderRight, "\n    ");

    case 'right':
      return "\n      ".concat(flatBorderLeft, "\n    ");

    case 'middle':
      return "\n      ".concat(flatBorderLeft, "\n      ").concat(flatBorderRight, "\n    ");

    default:
      return '';
  }
};
export var tokenStylePlaceholder = function tokenStylePlaceholder(props) {
  return props.tokenStyle ? css(["input::placeholder{color:", ";}"], function (_ref2) {
    var theme = _ref2.theme;
    return theme.colors.text3;
  }) : '';
};
//# sourceMappingURL=filter_styles.js.map