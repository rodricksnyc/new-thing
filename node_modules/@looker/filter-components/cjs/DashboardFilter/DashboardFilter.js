"use strict";

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.object.get-own-property-descriptors.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DashboardFilter = void 0;

require("core-js/modules/es.array.filter.js");

var _react = _interopRequireWildcard(require("react"));

var _components = require("@looker/components");

var _Filter = require("../Filter/Filter");

var _utils = require("../Filter/utils");

var _use_suggestable = require("./use_suggestable");

var _use_expression_state = require("./use_expression_state");

var _FilterCollection = require("../FilterCollection");

const _excluded = ["filter", "sdk"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const DashboardFilter = _ref => {
  let filter = _ref.filter,
      sdk = _ref.sdk,
      rest = _objectWithoutProperties(_ref, _excluded);

  const id = filter.id,
        name = filter.name,
        type = filter.type,
        field = filter.field,
        required = filter.required,
        ui_config = filter.ui_config,
        allow_multiple_values = filter.allow_multiple_values;

  const _useContext = (0, _react.useContext)(_FilterCollection.FilterContext),
        removeFilter = _useContext.removeFilter;

  (0, _react.useEffect)(() => {
    return () => {
      removeFilter(filter);
    };
  }, [removeFilter, filter]);
  const stateProps = (0, _use_expression_state.useExpressionState)(_objectSpread({
    filter
  }, rest));

  const _useSuggestable = (0, _use_suggestable.useSuggestable)({
    filter,
    sdk
  }),
        errorMessage = _useSuggestable.errorMessage,
        suggestableProps = _useSuggestable.suggestableProps;

  const validationMessage = (0, _utils.useValidationMessage)(stateProps.expression, required);
  return _react.default.createElement(_components.Field, {
    id: id || '',
    label: name || '',
    detail: errorMessage && _react.default.createElement(_components.Tooltip, {
      content: errorMessage
    }, _react.default.createElement(_components.Status, {
      intent: "critical",
      "data-testid": "error-icon"
    })),
    validationMessage: validationMessage
  }, _react.default.createElement(_Filter.Filter, _extends({
    name: name || '',
    type: type || '',
    field: field,
    config: ui_config,
    isRequired: required
  }, suggestableProps, stateProps, {
    allowMultipleValues: !!allow_multiple_values
  })));
};

exports.DashboardFilter = DashboardFilter;
//# sourceMappingURL=DashboardFilter.js.map