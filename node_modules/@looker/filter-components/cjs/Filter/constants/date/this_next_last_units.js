"use strict";

require("core-js/modules/es.object.get-own-property-descriptors.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useFiscalThisNextUnits = exports.useFiscalLastUnits = exports.useThisNextUnits = exports.useLastUnits = void 0;

require("core-js/modules/es.array.map.js");

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.array.iterator.js");

var _date_units = require("./date_units");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const singularizeLabel = option => _objectSpread(_objectSpread({}, option), {}, {
  label: option.singular || option.label
});

const useLastUnits = () => {
  const dateUnits = (0, _date_units.useDateUnits)();
  return dateUnits.map(singularizeLabel);
};

exports.useLastUnits = useLastUnits;

const useThisNextUnits = () => {
  const lastUnits = useLastUnits();
  return lastUnits.filter(option => ['second', 'minute', 'hour'].indexOf(option.value) === -1);
};

exports.useThisNextUnits = useThisNextUnits;

const useFiscalLastUnits = () => {
  const dateUnits = (0, _date_units.useDateUnits)();
  const fiscalDateUnits = (0, _date_units.useFiscalDateUnits)();
  return [...dateUnits, ...fiscalDateUnits].map(singularizeLabel);
};

exports.useFiscalLastUnits = useFiscalLastUnits;

const useFiscalThisNextUnits = () => {
  const thisNextUnits = useThisNextUnits();
  const fiscalDateUnits = (0, _date_units.useFiscalDateUnits)();
  return [...thisNextUnits, ...fiscalDateUnits].map(singularizeLabel);
};

exports.useFiscalThisNextUnits = useFiscalThisNextUnits;
//# sourceMappingURL=this_next_last_units.js.map