"use strict";

require("core-js/modules/es.array.index-of.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newDateItem = void 0;

var _filterExpressions = require("@looker/filter-expressions");

const _excluded = ["value", "unit"];

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const newDateItem = _ref => {
  let value = _ref.value,
      unit = _ref.unit,
      restItem = _objectWithoutProperties(_ref, _excluded);

  return (0, _filterExpressions.sanitizeDate)(restItem);
};

exports.newDateItem = newDateItem;
//# sourceMappingURL=new_date_item.js.map