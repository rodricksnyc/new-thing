"use strict";

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.object.get-own-property-descriptors.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StringInput = exports.StringInputLayout = void 0;

var _components = require("@looker/components");

var _isArray = _interopRequireDefault(require("lodash/isArray"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _filter_styles = require("../../../../../../utils/filter_styles");

var _option_utils = require("../../../../../../utils/option_utils");

var _use_option_filtering = require("../../../../../../utils/use_option_filtering");

var _use_placeholder = require("../../../../../../utils/use_placeholder");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const StringInputLayout = ({
  className,
  onChange,
  onInputChange,
  isLoading,
  item,
  suggestions,
  enumerations,
  validationMessage,
  id,
  width = _filter_styles.multiInputWidth,
  height
}) => {
  const options = (0, _react.useMemo)(() => {
    return suggestions ? (0, _option_utils.createOptions)(suggestions) : enumerations || [];
  }, [suggestions, enumerations]);

  const _useOptionFiltering = (0, _use_option_filtering.useOptionFiltering)({
    excludeValues: true,
    onInputChange,
    options,
    value: item.value
  }),
        filteredOptions = _useOptionFiltering.filteredOptions,
        noOptionsLabel = _useOptionFiltering.noOptionsLabel,
        onFilter = _useOptionFiltering.onFilter;

  const handleChange = newValue => {
    onFilter(newValue || '');
    onChange === null || onChange === void 0 ? void 0 : onChange(item.id, {
      value: [newValue]
    });
  };

  const comboboxInputRef = _react.default.useRef(null);

  const handleKeyDown = event => {
    if (event.key === 'Enter') {
      var _comboboxInputRef$cur;

      event.preventDefault();
      comboboxInputRef === null || comboboxInputRef === void 0 ? void 0 : (_comboboxInputRef$cur = comboboxInputRef.current) === null || _comboboxInputRef$cur === void 0 ? void 0 : _comboboxInputRef$cur.click();
    }
  };

  const placeholderProps = (0, _use_placeholder.usePlaceholder)(item.value, validationMessage);

  const commonProps = _objectSpread(_objectSpread({}, placeholderProps), {}, {
    className,
    height,
    id,
    maxHeight: 145,
    onChange: handleChange,
    noErrorIcon: true,
    validationType: validationMessage === null || validationMessage === void 0 ? void 0 : validationMessage.type,
    width
  });

  const value = (0, _isArray.default)(item.value) && item.value.length ? item.value[0] : item.value;
  return _react.default.createElement(_components.InputSearch, _extends({}, commonProps, {
    options: filteredOptions,
    noOptionsLabel: noOptionsLabel,
    indicator: false,
    isLoading: isLoading,
    value: value,
    onKeyDown: handleKeyDown,
    isClearable: true,
    ref: comboboxInputRef,
    hideSearchIcon: true,
    openOnClick: true
  }));
};

exports.StringInputLayout = StringInputLayout;
const StringInput = (0, _styledComponents.default)(StringInputLayout).withConfig({
  displayName: "StringInput",
  componentId: "sc-feqdof-0"
})(["", " ", "{", "}"], _filter_styles.inputPlacementStyle, _components.InputText, _filter_styles.inputPlacementStyle);
exports.StringInput = StringInput;
//# sourceMappingURL=StringInput.js.map