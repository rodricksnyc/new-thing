"use strict";

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.object.get-own-property-descriptors.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RelativeTimeframeCustom = void 0;

var _components = require("@looker/components");

var _react = _interopRequireDefault(require("react"));

var _format_date = require("../../../../utils/format_date");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const defaultValue = {
  from: new Date(Date.now()),
  to: new Date(Date.now())
};

const RelativeTimeframeCustom = ({
  value,
  onCustomChange
}) => {
  const range = typeof value === 'string' ? defaultValue : value;

  const handleCustomChange = (d = {}) => {
    const newDateRange = _objectSpread({
      from: new Date(Date.now()),
      to: new Date(Date.now())
    }, d);

    onCustomChange(newDateRange);
  };

  return _react.default.createElement(_components.Box2, {
    p: "u3"
  }, _react.default.createElement(_components.InputDateRange, {
    dateStringFormat: _format_date.FILTERS_DATE_FORMAT,
    value: range,
    onChange: handleCustomChange
  }));
};

exports.RelativeTimeframeCustom = RelativeTimeframeCustom;
//# sourceMappingURL=RelativeTimeframeCustom.js.map