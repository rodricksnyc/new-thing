"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Relative = void 0;

var _components = require("@looker/components");

var _react = _interopRequireDefault(require("react"));

var _utils = require("../../../../../../../utils");

var _GroupSelect = require("../../../GroupSelect");

var _MidInputLabel = require("../../../MidInputLabel");

var _Interval = require("../Interval");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const Relative = ({
  item: {
    id,
    intervalType,
    startInterval,
    endInterval
  },
  onChange,
  field
}) => {
  const _useTranslation = (0, _utils.useTranslation)('Relative'),
        t = _useTranslation.t;

  const options = [{
    value: 'ago',
    label: t('ago')
  }, {
    value: 'from now',
    label: t('from now')
  }];

  const intervalTypeChange = value => {
    onChange(id, {
      intervalType: value
    });
  };

  const startChange = interval => {
    onChange(id, {
      startInterval: interval
    });
  };

  const endChange = interval => {
    onChange(id, {
      endInterval: interval
    });
  };

  return _react.default.createElement(_components.Box2, {
    display: "flex",
    bg: "field"
  }, _react.default.createElement(_Interval.Interval, {
    placement: "middle",
    item: startInterval,
    onChange: startChange,
    field: field
  }), _react.default.createElement(_GroupSelect.GroupSelect, {
    value: intervalType,
    options: options,
    onChange: intervalTypeChange,
    placement: "middle"
  }), _react.default.createElement(_MidInputLabel.MidInputLabel, null, "FOR"), _react.default.createElement(_Interval.Interval, {
    item: endInterval,
    onChange: endChange,
    field: field
  }));
};

exports.Relative = Relative;
//# sourceMappingURL=Relative.js.map