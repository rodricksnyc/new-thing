"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LocationFilter = void 0;

require("core-js/modules/es.array.includes.js");

var _components = require("@looker/components");

var _react = _interopRequireDefault(require("react"));

var _GroupSelect = require("../GroupSelect");

var _location_filter_type_to_filter = require("./utils/location_filter_type_to_filter");

var _utils = require("../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const LocationFilter = ({
  item,
  filterType,
  onChange,
  userAttributes,
  validationMessage,
  showMatchesAdvanced
}) => {
  const locationFilterOptions = (0, _utils.useLocationFilterOptions)();
  const options = (0, _utils.useFilterOptions)(locationFilterOptions, showMatchesAdvanced);

  const locationTypeChange = value => onChange(item.id, {
    type: value
  });

  const FilterComponent = (0, _location_filter_type_to_filter.locationFilterTypeToFilter)(item.type);
  return _react.default.createElement(_components.Flex, {
    flexDirection: "row",
    alignItems: "center"
  }, _react.default.createElement(_components.Box, null, _react.default.createElement(_GroupSelect.GroupSelect, {
    value: item.type,
    options: options,
    onChange: locationTypeChange,
    validationType: validationMessage === null || validationMessage === void 0 ? void 0 : validationMessage.type,
    placement: ['null', 'notnull', 'anyvalue'].includes(item.type) ? undefined : 'left'
  })), _react.default.createElement(FilterComponent, {
    item: item,
    onChange: onChange,
    validationMessage: validationMessage,
    userAttributes: userAttributes,
    filterType: filterType
  }));
};

exports.LocationFilter = LocationFilter;
//# sourceMappingURL=LocationFilter.js.map