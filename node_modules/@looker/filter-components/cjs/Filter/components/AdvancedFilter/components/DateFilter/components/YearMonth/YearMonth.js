"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.YearMonth = void 0;

require("core-js/modules/es.array.index-of.js");

var _filterExpressions = require("@looker/filter-expressions");

var _padStart = _interopRequireDefault(require("lodash/padStart"));

var _react = _interopRequireDefault(require("react"));

var _utils = require("../../../../../../../utils");

var _option_utils = require("../../../../../../utils/option_utils");

var _GroupSelect = require("../../../GroupSelect");

var _GroupInput = require("../../../GroupInput");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const YearMonth = ({
  item: {
    id,
    month,
    year
  },
  onChange
}) => {
  const _useTranslation = (0, _utils.useTranslation)('get_months'),
        t = _useTranslation.t;

  const months = (0, _filterExpressions.getMonths)(t);
  const monthNumber = Number.parseInt(month, 10) - 1;
  const monthString = months[monthNumber];

  const yearChange = e => {
    onChange(id, {
      year: e.target.value
    });
  };

  const monthChange = value => {
    const monthValue = (0, _padStart.default)(String(months.indexOf(value) + 1), 2, '0');
    onChange(id, {
      month: monthValue
    });
  };

  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_GroupSelect.GroupSelect, {
    value: monthString,
    options: (0, _option_utils.createOptions)(months),
    onChange: monthChange,
    placement: "middle"
  }), _react.default.createElement(_GroupInput.GroupInput, {
    onChange: yearChange,
    value: year,
    placement: "right"
  }));
};

exports.YearMonth = YearMonth;
//# sourceMappingURL=YearMonth.js.map