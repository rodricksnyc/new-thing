"use strict";

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TimeInput = void 0;

require("core-js/modules/es.regexp.exec.js");

require("core-js/modules/es.string.split.js");

var _components = require("@looker/components");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _filter_styles = require("../../../../../../utils/filter_styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

const TimeInputInternal = ({
  className,
  date,
  onChange
}) => {
  const value = `${date.getHours()}:${date.getMinutes()}`;

  const handleChange = (newTimeString = '0:00') => {
    const _newTimeString$split = newTimeString.split(':'),
          _newTimeString$split2 = _slicedToArray(_newTimeString$split, 2),
          newHour = _newTimeString$split2[0],
          newMinute = _newTimeString$split2[1];

    const newDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), Number(newHour), Number(newMinute));
    onChange(newDate);
  };

  return _react.default.createElement(_components.InputTimeSelect, {
    className: className,
    interval: 30,
    value: value,
    onChange: handleChange
  });
};

const TimeInput = (0, _styledComponents.default)(TimeInputInternal).withConfig({
  displayName: "TimeInput",
  componentId: "sc-1e5vm7c-0"
})(["width:120px;", "{", "}"], _components.InputText, _filter_styles.inputPlacementStyle);
exports.TimeInput = TimeInput;
//# sourceMappingURL=TimeInput.js.map