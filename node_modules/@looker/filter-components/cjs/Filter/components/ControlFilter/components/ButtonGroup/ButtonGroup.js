"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonGroup = void 0;

var _components = require("@looker/components");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _constants = require("../../../../../constants");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ButtonGroup = (0, _styledComponents.default)(({
  className,
  isLoading,
  onChange,
  options,
  value
}) => isLoading ? _react.default.createElement(_components.ProgressCircular, {
  size: "medium"
}) : _react.default.createElement(_components.ButtonGroup, {
  className: className,
  onChange: onChange,
  options: options,
  value: value
})).withConfig({
  displayName: "ButtonGroup",
  componentId: "sc-ikfypj-0"
})(["", ""], ({
  validationMessage
}) => (validationMessage === null || validationMessage === void 0 ? void 0 : validationMessage.type) === _constants.ERROR_TYPE && (0, _styledComponents.css)(["", "{border-color:", ";}"], _components.ButtonItem, ({
  theme
}) => theme.colors.criticalBorder));
exports.ButtonGroup = ButtonGroup;
//# sourceMappingURL=ButtonGroup.js.map