{"version":3,"file":"index.js","sources":["../../../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport {\n  elementScroll,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  PartialKeys,\n  Virtualizer,\n  VirtualizerOptions,\n  windowScroll,\n} from '@tanstack/virtual-core'\nexport * from '@tanstack/virtual-core'\n\n//\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nfunction useVirtualizerBase<TScrollElement, TItemElement = unknown>(\n  options: VirtualizerOptions<TScrollElement, TItemElement>,\n): Virtualizer<TScrollElement, TItemElement> {\n  const rerender = React.useReducer(() => ({}), {})[1]\n\n  const resolvedOptions: VirtualizerOptions<TScrollElement, TItemElement> = {\n    ...options,\n    onChange: (instance) => {\n      rerender()\n      options.onChange?.(instance)\n    },\n  }\n\n  const [instance] = React.useState(\n    () => new Virtualizer<TScrollElement, TItemElement>(resolvedOptions),\n  )\n\n  instance.setOptions(resolvedOptions)\n\n  React.useEffect(() => {\n    return instance._didMount()\n  }, [])\n\n  useIsomorphicLayoutEffect(() => {\n    return instance._willUpdate()\n  })\n\n  return instance\n}\n\nexport function useVirtualizer<TScrollElement, TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  >,\n): Virtualizer<TScrollElement, TItemElement> {\n  return useVirtualizerBase<TScrollElement, TItemElement>({\n    observeElementRect: observeElementRect,\n    observeElementOffset: observeElementOffset,\n    scrollToFn: elementScroll,\n    ...options,\n  })\n}\n\nexport function useWindowVirtualizer<TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): Virtualizer<Window, TItemElement> {\n  return useVirtualizerBase<Window, TItemElement>({\n    getScrollElement: () => (typeof window !== 'undefined' ? window : null!),\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll,\n    ...options,\n  })\n}\n"],"names":["useIsomorphicLayoutEffect","window","React","useLayoutEffect","useEffect","useVirtualizerBase","options","rerender","useReducer","resolvedOptions","onChange","instance","useState","Virtualizer","setOptions","_didMount","_willUpdate","useVirtualizer","observeElementRect","observeElementOffset","scrollToFn","elementScroll","useWindowVirtualizer","getScrollElement","observeWindowRect","observeWindowOffset","windowScroll"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,MAAMA,yBAAyB,GAC7B,OAAOC,MAAP,KAAkB,WAAlB,GAAgCC,gBAAK,CAACC,eAAtC,GAAwDD,gBAAK,CAACE,SADhE,CAAA;;AAGA,SAASC,kBAAT,CACEC,OADF,EAE6C;AAC3C,EAAA,MAAMC,QAAQ,GAAGL,gBAAK,CAACM,UAAN,CAAiB,OAAO,EAAP,CAAjB,EAA6B,EAA7B,CAAA,CAAiC,CAAjC,CAAjB,CAAA;AAEA,EAAA,MAAMC,eAAiE,GAAG,EACxE,GAAGH,OADqE;IAExEI,QAAQ,EAAGC,QAAD,IAAc;MACtBJ,QAAQ,EAAA,CAAA;AACRD,MAAAA,OAAO,CAACI,QAAR,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAJ,OAAO,CAACI,QAAR,CAAmBC,QAAnB,CAAA,CAAA;AACD,KAAA;GALH,CAAA;AAQA,EAAA,MAAM,CAACA,QAAD,CAAaT,GAAAA,gBAAK,CAACU,QAAN,CACjB,MAAM,IAAIC,iBAAJ,CAA8CJ,eAA9C,CADW,CAAnB,CAAA;EAIAE,QAAQ,CAACG,UAAT,CAAoBL,eAApB,CAAA,CAAA;EAEAP,gBAAK,CAACE,SAAN,CAAgB,MAAM;IACpB,OAAOO,QAAQ,CAACI,SAAT,EAAP,CAAA;AACD,GAFD,EAEG,EAFH,CAAA,CAAA;AAIAf,EAAAA,yBAAyB,CAAC,MAAM;IAC9B,OAAOW,QAAQ,CAACK,WAAT,EAAP,CAAA;AACD,GAFwB,CAAzB,CAAA;AAIA,EAAA,OAAOL,QAAP,CAAA;AACD,CAAA;;AAEM,SAASM,cAAT,CACLX,OADK,EAKsC;AAC3C,EAAA,OAAOD,kBAAkB,CAA+B;AACtDa,IAAAA,kBAAkB,EAAEA,wBADkC;AAEtDC,IAAAA,oBAAoB,EAAEA,0BAFgC;AAGtDC,IAAAA,UAAU,EAAEC,mBAH0C;IAItD,GAAGf,OAAAA;AAJmD,GAA/B,CAAzB,CAAA;AAMD,CAAA;AAEM,SAASgB,oBAAT,CACLhB,OADK,EAQ8B;AACnC,EAAA,OAAOD,kBAAkB,CAAuB;IAC9CkB,gBAAgB,EAAE,MAAO,OAAOtB,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,IADpB;AAE9CiB,IAAAA,kBAAkB,EAAEM,uBAF0B;AAG9CL,IAAAA,oBAAoB,EAAEM,yBAHwB;AAI9CL,IAAAA,UAAU,EAAEM,kBAJkC;IAK9C,GAAGpB,OAAAA;AAL2C,GAAvB,CAAzB,CAAA;AAOD;;;;;;;;;;;;;;;;"}